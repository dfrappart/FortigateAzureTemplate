{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Virtual Machine size selection"
      }
    },
    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account Type."
      }
    },
    "storageAccountResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing existing storage account"
      }
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Storage Account"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "FortiGateVMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name for FortiGate virtual appliance."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Identifies whether to use new or existing Storage Account"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Virtual Network Address space in CIDR notation (ex. 10.1.0.0/16)"
      }
    },
    "InternalSubnetPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Internal subnet (ie. second Web server subnet) CIDR notation (ex. 10.1.2.0/24)"
      }
    },
    "InternalSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Internal subnet (ie. second Web server subnet) name"
      }
    },
    "ManagementSubnetPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Management subnet CIDR notation (ex 10.1.2.0/24)"
      }
    },
    "ManagementSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Management subnet name"
      }
    },
    "FortiGateAInternalIPAddress": {
      "type": "string",
      "metadata": {
        "description": "Static IP for internal subnet NIC of the first FortiGate virtual appliance."
      }
    },
    "FortiGateAManagementIPAddress": {
      "type": "string",
      "metadata": {
        "description": "Static IP for management subnet NIC of the first FortiGate virtual appliance."
      }
    },
    "FortiGateBInternalIPAddress": {
      "type": "string",
      "metadata": {
        "description": "Static IP for internal subnet NIC of the second FortiGate virtual appliance."
      }
    },
    "FortiGateBManagementIPAddress": {
      "type": "string",
      "metadata": {
        "description": "Static IP for management subnet NIC of the second FortiGate virtual appliance."
      }
    },
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/fortinetclouddev/FortigateAzureTemplate/WMManagement",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "location"
      }
    }
  },
  "variables": {
    "compute_AvailabilitySet_FG_Name": "[concat(parameters('FortiGateVMNamePrefix'),'-AvailabilitySet')]",
    "compute_AvailabilitySet_FG_Id": "[resourceId('Microsoft.Compute/availabilitySets', variables('compute_AvailabilitySet_FG_Name'))]",

    "storageAccountType": "[parameters('StorageAccountType')]",
    "vmStorageAccountContainerName": "vhds",
    "vmSize": "[parameters('VirtualMachineSize')]",

    "VNetName": "[parameters('virtualNetworkName')]",
    "InternalSubnetName": "[parameters('InternalSubnetName')]",
    "ManagementSubnetName": "[parameters('ManagementSubnetName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('InternalSubnetName'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', variables('ManagementSubnetName'))]",

    "VNetAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
    "InternalSubnetPrefix": "[parameters('InternalSubnetPrefix')]",
    "ManagementSubnetPrefix": "[parameters('ManagementSubnetPrefix')]",

    "vmName": "[concat(parameters('FortiGateVMNamePrefix'),'-A')]",
    "vm2Name": "[concat(parameters('FortiGateVMNamePrefix'),'-B')]",

    "FGProtectedAddress": "[parameters('FortiGateAManagementIPAddress')]",
    "FGPubFacingAddress": "[parameters('FortiGateAInternalIPAddress')]",
    "FGBProtectedAddress": "[parameters('FortiGateBManagementIPAddress')]",
    "FGBPubFacingAddress": "[parameters('FortiGateBInternalIPAddress')]",
    "scaleNumber": 1,
    "apiVer": "2015-06-15",
    "compute_VM_fg1_Name": "[variables('vmName')]",
    "compute_VM_fg2_Name": "[variables('vm2Name')]",

    "network_NIC_fg11_Name": "[concat(variables('vmName'),'Nic0')]",
    "network_NIC_fg11_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg11_Name'))]",
    "network_NIC_fg12_Name": "[concat(variables('vmName'),'Nic1')]",
    "network_NIC_fg12_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg12_Name'))]",
    "network_NIC_fg21_Name": "[concat(variables('vm2Name'),'Nic0')]",
    "network_NIC_fg21_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg21_Name'))]",
    "network_NIC_fg22_Name": "[concat(variables('vm2Name'),'Nic1')]",
    "network_NIC_fg22_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg22_Name'))]",

    "storage_Acct_1_Id": "[resourceId('Microsoft.Storage/storageAccounts',parameters('StorageAccountName'))]",

    "storageAccountSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "virtualNetworkSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','vnet-existing.json')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('compute_AvailabilitySet_FG_Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]"
    },
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[parameters('StorageAccountName')]"
          },
          "storageAccountExistingRG": {
            "value": "[parameters('storageAccountResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          },
          "subnet1Name": {
            "value": "[parameters('InternalSubnetName')]"
          },
          "subnet1AddressPrefix": {
            "value": "[parameters('InternalSubnetPrefix')]"
          },
          "subnet2Name": {
            "value": "[parameters('ManagementSubnetName')]"
          },
          "subnet2AddressPrefix": {
            "value": "[parameters('ManagementSubnetPrefix')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('virtualNetworkResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg11_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FGPubFacingAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet1ID.value]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg12_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FGProtectedAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet2ID.value]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg21_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FGBPubFacingAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet1ID.value]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg22_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('FGBProtectedAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet2ID.value]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('compute_VM_fg1_Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "fortinet_fg-vm",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "copy": {
        "name": "vmLoop",
        "count": "[variables('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg11_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg12_Name'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "availabilitySet": {
          "id": "[variables('compute_AvailabilitySet_FG_Id')]"
        },
        "osProfile": {
          "computerName": "[variables('compute_VM_fg1_Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net')]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "fortinet_fg-vm",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('compute_VM_fg1_Name'),'-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('compute_VM_fg1_Name'), '-osdisk', '.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg11_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg12_Id')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('compute_VM_fg2_Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "fortinet_fg-vm",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "copy": {
        "name": "vmLoop",
        "count": "[variables('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg21_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg22_Name'))]",
        "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "availabilitySet": {
          "id": "[variables('compute_AvailabilitySet_FG_Id')]"
        },
        "osProfile": {
          "computerName": "[variables('compute_VM_fg2_Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net')]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "fortinet_fg-vm",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('compute_VM_fg2_Name'),'-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/vhds/', variables('compute_VM_fg2_Name'), '-osdisk', '.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg21_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg22_Id')]"
            }
          ]
        }
      }
    }
  ]
  }
